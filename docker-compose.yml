version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: npm run dev -- -H 0.0.0.0
    env_file:
      - .env.local
    environment:
      NEXT_PUBLIC_SUPABASE_URL: http://supabase-rest:8000
      NEXT_PUBLIC_SUPABASE_ANON_KEY: supabase-anon-key
      NEXT_PUBLIC_POSTHOG_HOST:
      HOST: 0.0.0.0
    ports:
      - "3000:3000"
    depends_on:
      - supabase-db
      - supabase-rest
    volumes:
      - .:/app
      - /app/node_modules
    profiles:
      - app

  supabase-db:
    image: supabase/postgres:15.1.2.43
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: supabase
      POSTGRES_DB: postgres
      JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters
      JWT_EXPIRY: 3600
    ports:
      - "5432:5432"
    volumes:
      - supabase-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  supabase-rest:
    image: supabase/postgrest:v12.0.2
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://postgres:supabase@supabase-db:5432/postgres
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters
      PGRST_SERVER_PORT: 8000
    ports:
      - "8000:8000"

  supabase-auth:
    image: supabase/gotrue:v2.150.0
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      GOTRUE_DB_DATABASE_URL: postgres://postgres:supabase@supabase-db:5432/postgres
      GOTRUE_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_SMTP_HOST: localhost
      GOTRUE_SMTP_PORT: 1025
      GOTRUE_SMTP_USER: user
      GOTRUE_SMTP_PASS: pass
      GOTRUE_SMTP_ADMIN_EMAIL: dev@pocketphilosopher.dev
      GOTRUE_SMTP_MAX_FREQUENCY: 1s
    ports:
      - "9999:9999"

  supabase-realtime:
    image: supabase/realtime:v2.29.3
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: supabase
      JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters
      PORT: 4000
    ports:
      - "4000:4000"

  supabase-storage:
    image: supabase/storage-api:v1.0.5
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      POSTGREST_URL: http://supabase-rest:8000
      PGRST_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters
      DATABASE_URL: postgres://postgres:supabase@supabase-db:5432/postgres
      FILE_SIZE_LIMIT: 52428800
    ports:
      - "5000:5000"

  supabase-studio:
    image: supabase/studio:20241216-0d6e66f
    restart: unless-stopped
    depends_on:
      - supabase-rest
      - supabase-auth
    environment:
      STUDIO_PG_META_URL: http://supabase-rest:8000
      SUPABASE_URL: http://localhost:8000
      SUPABASE_ANON_KEY: supabase-anon-key
    ports:
      - "54323:3000"

  redis:
    image: redis:7.4-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  ollama:
    image: ghcr.io/ollama/ollama:latest
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    profiles:
      - ollama

volumes:
  ollama-data:
  supabase-data:
  redis-data:
